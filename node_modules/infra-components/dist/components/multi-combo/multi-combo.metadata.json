[{"__symbolic":"module","version":3,"metadata":{"MultiCombo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"multi-combo","template":"\n        <button (click)=\"toggleVisibility()\"\n            [ngClass]=\"{ opened: show }\"\n            [disabled]=\"disabled\">\n            {{ title }}\n        </button>\n        <div [ngClass]=\"{ hidden: !show }\">\n            <div class=\"options\">\n                <button class=\"select-all\" (click)=\"selectAll()\" *ngIf=\"!maxSelected\"\n                    [title]=\"labels('select.all')\">{{ labels('select.all') }}</button>\n                <button class=\"deselect-all\" (click)=\"deselectAll()\"\n                    [title]=\"labels('deselect.all')\">{{ labels('deselect.all') }}</button>\n            </div>\n            <div *ngIf=\"filter\" class=\"filter\">\n                <search-input (onChange)=\"search.input = $event\" [attr.placeholder]=\"labels('search')\"></search-input>\n            </div>\n            <ul>\n                <li *ngFor=\"let item of _comboModel | filter: getFilter() | orderBy: orderBy | store: self:'filteredComboModel'\"\n                    (click)=\"toggleItem(item)\"\n                    [ngClass]=\"{ selected: isSelected(item) }\"\n                    [attr.disabled]=\"isDisabled()\">\n                    {{ displayItem(item) }}\n                </li>\n            </ul>\n        </div>\n    ","styles":["\n        :host {\n            position: relative;\n        }\n\n        :host > button {\n            min-width: 150px;\n        }\n\n        :host > div {\n            position: absolute;\n            z-index: 2;\n            left: 0px;\n            overflow: hidden;\n            background:white;\n            border: 2px solid black;\n        }\n\n        :host > div.hidden {\n            max-height: 0px;\n            border-width: 0px;\n        }\n\n        :host > div>div.options {\n        }\n\n        :host > div>div.options>* {\n            display: inline-block;\n            vertical-align: middle;\n        }\n\n        :host > div>div.options>button {\n        }\n        :host > div>div.options>button:hover {\n        }\n\n        :host > div>div.filter {\n            margin: 10px 0px;\n            width: 100%;\n            position: relative;\n        }\n\n        :host > div>div.filter input {\n            width: 100%;\n        }\n\n        :host > div>div.filter input:focus {\n        }\n\n        :host > div>ul {\n            list-style: none;\n            padding: 0px;\n            overflow-y: scroll;\n            max-height: 200px;\n        }\n\n        :host > div>ul>li {\n            white-space: nowrap;\n            cursor: pointer;\n        }\n\n        :host > div>ul>li.selected {\n        }\n\n        :host > div>ul>li:not(.selected):not([disabled]):hover {\n        }\n\n        :host > div>ul>li:not(.selected)[disabled=\"true\"] {\n            pointer-events: none;\n        }\n    "],"host":{"(document:click)":"onClick($event)","$quoted$":["(document:click)"]}}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer"},{"__symbolic":"reference","module":"../../services","name":"LabelsService"}]}],"labels":[{"__symbolic":"method"}],"comboModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filteredModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["outputModel"]}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"display":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"orderBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"reverse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["max"]}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onSelectItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onDeselectItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"filteredModelChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["outputModelChange"]}]}],"onOpen":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onClose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"toggleVisibility":[{"__symbolic":"method"}],"isSelected":[{"__symbolic":"method"}],"isDisabled":[{"__symbolic":"method"}],"toggleItem":[{"__symbolic":"method"}],"selectAll":[{"__symbolic":"method"}],"deselectAll":[{"__symbolic":"method"}],"displayItem":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method"}],"getFilter":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"MultiCombo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"multi-combo","template":"\n        <button (click)=\"toggleVisibility()\"\n            [ngClass]=\"{ opened: show }\"\n            [disabled]=\"disabled\">\n            {{ title }}\n        </button>\n        <div [ngClass]=\"{ hidden: !show }\">\n            <div class=\"options\">\n                <button class=\"select-all\" (click)=\"selectAll()\" *ngIf=\"!maxSelected\"\n                    [title]=\"labels('select.all')\">{{ labels('select.all') }}</button>\n                <button class=\"deselect-all\" (click)=\"deselectAll()\"\n                    [title]=\"labels('deselect.all')\">{{ labels('deselect.all') }}</button>\n            </div>\n            <div *ngIf=\"filter\" class=\"filter\">\n                <search-input (onChange)=\"search.input = $event\" [attr.placeholder]=\"labels('search')\"></search-input>\n            </div>\n            <ul>\n                <li *ngFor=\"let item of _comboModel | filter: getFilter() | orderBy: orderBy | store: self:'filteredComboModel'\"\n                    (click)=\"toggleItem(item)\"\n                    [ngClass]=\"{ selected: isSelected(item) }\"\n                    [attr.disabled]=\"isDisabled()\">\n                    {{ displayItem(item) }}\n                </li>\n            </ul>\n        </div>\n    ","styles":["\n        :host {\n            position: relative;\n        }\n\n        :host > button {\n            min-width: 150px;\n        }\n\n        :host > div {\n            position: absolute;\n            z-index: 2;\n            left: 0px;\n            overflow: hidden;\n            background:white;\n            border: 2px solid black;\n        }\n\n        :host > div.hidden {\n            max-height: 0px;\n            border-width: 0px;\n        }\n\n        :host > div>div.options {\n        }\n\n        :host > div>div.options>* {\n            display: inline-block;\n            vertical-align: middle;\n        }\n\n        :host > div>div.options>button {\n        }\n        :host > div>div.options>button:hover {\n        }\n\n        :host > div>div.filter {\n            margin: 10px 0px;\n            width: 100%;\n            position: relative;\n        }\n\n        :host > div>div.filter input {\n            width: 100%;\n        }\n\n        :host > div>div.filter input:focus {\n        }\n\n        :host > div>ul {\n            list-style: none;\n            padding: 0px;\n            overflow-y: scroll;\n            max-height: 200px;\n        }\n\n        :host > div>ul>li {\n            white-space: nowrap;\n            cursor: pointer;\n        }\n\n        :host > div>ul>li.selected {\n        }\n\n        :host > div>ul>li:not(.selected):not([disabled]):hover {\n        }\n\n        :host > div>ul>li:not(.selected)[disabled=\"true\"] {\n            pointer-events: none;\n        }\n    "],"host":{"(document:click)":"onClick($event)"}}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer"},{"__symbolic":"reference","module":"../../services","name":"LabelsService"}]}],"labels":[{"__symbolic":"method"}],"comboModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filteredModel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["outputModel"]}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"display":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"filter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"orderBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"reverse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"maxSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["max"]}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"onSelectItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onDeselectItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"filteredModelChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["outputModelChange"]}]}],"onOpen":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onClose":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"toggleVisibility":[{"__symbolic":"method"}],"isSelected":[{"__symbolic":"method"}],"isDisabled":[{"__symbolic":"method"}],"toggleItem":[{"__symbolic":"method"}],"selectAll":[{"__symbolic":"method"}],"deselectAll":[{"__symbolic":"method"}],"displayItem":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method"}],"getFilter":[{"__symbolic":"method"}]}}}}]